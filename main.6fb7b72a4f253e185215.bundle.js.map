{"version":3,"file":"main.6fb7b72a4f253e185215.bundle.js","sources":["webpack:///./src/utils.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Color = require(\"color\");\nvar cloneDeep = require(\"lodash/cloneDeep\");\nvar find = require(\"lodash/find\");\nvar forEach = require(\"lodash/forEach\");\nvar get = require(\"lodash/get\");\nvar isObject = require(\"lodash/isObject\");\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\nexports.lighten = function (color) {\n    return Color(color)\n        .fade(0.3)\n        .string();\n};\nexports.darken = function (color) {\n    return Color(color)\n        .darken(0.2)\n        .string();\n};\nexports.fade = function (color) {\n    return Color(color)\n        .fade(0.95)\n        .string();\n};\nexports.blacken = function (color) {\n    return Color(color)\n        .darken(0.6)\n        .string();\n};\nexports.normal = function (props) {\n    return get(props.theme, 'weights.0');\n};\nexports.bold = function (props) {\n    return get(props.theme, 'weights.1');\n};\nexports.px = function (n) { return (typeof n === 'number' ? n + 'px' : n); };\nexports.randomString = function (length) {\n    if (length === void 0) { length = 16; }\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n};\nexports.stopPropagation = function (e) {\n    e.stopPropagation();\n};\nexports.stopEvent = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n};\nexports.getColorFromTheme = function (theme) { return function (colorString) {\n    return get(theme, \"colors.\" + colorString);\n}; };\nexports.getColoringType = function (props) {\n    var type = find(Object.keys(props), function (b) {\n        return !!props[b] && !!find(Object.keys(props.theme.colors), function (k) { return k === b; });\n    });\n    return type;\n};\nexports.getColor = function (props, key, shade) {\n    if (get(props, key)) {\n        return get(props, key);\n    }\n    var type = exports.getColoringType(props);\n    if (type) {\n        var color = exports.getColorFromTheme(props.theme)(type);\n        if (isObject(color)) {\n            return color[shade];\n        }\n        else {\n            return color;\n        }\n    }\n};\nexports.monospace = function (props) {\n    return props.monospace ? { fontFamily: props.theme.monospace } : null;\n};\nfunction withProps() {\n    return function (fn) { return fn; };\n}\nexports.withProps = withProps;\nexports.regexEscape = function (str) {\n    return str.replace(matchOperatorsRe, '\\\\$&');\n};\nexports.stripSchemaFormats = function (schema, whitelist) {\n    if (whitelist === void 0) { whitelist = []; }\n    var newSchema = cloneDeep(schema);\n    var _strip = function (schema) {\n        if (schema.format && whitelist.indexOf(schema.format) === -1) {\n            delete schema.format;\n        }\n        if (schema.properties) {\n            forEach(schema.properties, function (subSchema) {\n                _strip(subSchema);\n            });\n        }\n        if (schema.items) {\n            _strip(schema.items);\n        }\n    };\n    _strip(newSchema);\n    return newSchema;\n};\nexports.disallowAdditionalProperties = function (schema) {\n    var newSchema = cloneDeep(schema);\n    var disallow = function (schema) {\n        if (schema.additionalProperties) {\n            schema.additionalProperties = false;\n        }\n        if (schema.properties) {\n            forEach(schema.properties, function (subSchema) {\n                disallow(subSchema);\n            });\n        }\n    };\n    disallow(newSchema);\n    return newSchema;\n};\nexports.getAngleBetweenPoints = function (p1, p2) {\n    return (Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180) / Math.PI;\n};\nexports.constrainNumber = function (value, lower, upper) {\n    if (lower === void 0) { lower = 0; }\n    if (upper === void 0) { upper = 100; }\n    return Math.min(Math.max(value, lower), upper);\n};\n"],"mappings":"AACA","sourceRoot":""}